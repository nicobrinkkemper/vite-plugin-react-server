{"version":3,"file":"resolvePage.js","sourceRoot":"","sources":["../../plugin/resolvePage.ts"],"names":[],"mappings":"AAYA,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,EAChC,UAAU,EACV,IAAI,EACJ,GAAG,EACH,UAAU,GACS;IACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,OAAO;YACL,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI,KAAK,CAAC,iBAAiB,OAAO,UAAU,EAAE,CAAC;SACvD,CAAC;IACJ,CAAC;IACD,MAAM,IAAI,GACR,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,IAAI;QAClD,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC;IACT,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;IAC5E,IAAI,KAAK,EAAE,CAAC;QACV,IAAI,OAAO,UAAU,CAAC,KAAK,CAAC,KAAK,UAAU,EAAE,CAAC;YAC5C,OAAO;gBACL,IAAI,EAAE,SAAS;gBACf,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC;aACxB,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IACE,OAAO,UAAU,KAAK,QAAQ;gBAC9B,UAAU,IAAI,IAAI;gBAClB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAExC,OAAO,UAA+B,CAAC;YACzC,OAAO;gBACL,IAAI,EAAE,OAAO;gBACb,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC,KAAK;gBACzB,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC;aAClC,CAAC;QACJ,CAAC;IACH,CAAC;IACD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAAE,OAAO,UAA+B,CAAC;IAClE,OAAO;QACL,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,IAAI,KAAK,CACd,+BAA+B,UAAU,SAAS,IAAI,MACpD,OAAO,UAAU,KAAK,QAAQ,IAAI,UAAU,IAAI,IAAI;YAClD,CAAC,CAAC,IAAI,CAAC,MAAM;gBACX,CAAC,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBACzC,CAAC,CAAC,+CAA+C;YACnD,CAAC,CAAC,qBAAqB,GAAG,OAAO,UACrC,EAAE,EACF,EAAE,KAAK,EAAE,UAAU,EAAE,CACtB;KACF,CAAC;AACJ,CAAC","sourcesContent":["type ResolvePageOptions = {\n  pageModule: Record<string, any>;\n  path: string;\n  url: string;\n  exportName: string;\n};\n\ntype ResolvePageResult =\n  | { type: \"success\"; key: string; Page: any }\n  | { type: \"error\"; error: Error }\n  | { type: \"skip\" };\n\nexport async function resolvePage({\n  pageModule,\n  path,\n  url,\n  exportName,\n}: ResolvePageOptions): Promise<ResolvePageResult> {\n  if (!pageModule) {\n    return {\n      type: \"error\",\n      error: new Error(`pageModule is ${typeof pageModule}`),\n    };\n  }\n  const keys =\n    typeof pageModule === \"object\" && pageModule != null\n      ? Object.keys(pageModule)\n      : [];\n  const found = keys.find((v) => v === exportName || v === url || v === path);\n  if (found) {\n    if (typeof pageModule[found] === \"function\") {\n      return {\n        type: \"success\",\n        key: found,\n        Page: pageModule[found],\n      };\n    } else {\n      if (\n        typeof pageModule === \"object\" &&\n        pageModule != null &&\n        Object.keys(pageModule).includes(\"type\")\n      )\n        return pageModule as ResolvePageResult;\n      return {\n        type: \"error\",\n        [exportName]: () => found,\n        error: pageModule[found][\"error\"],\n      };\n    }\n  }\n  if (keys.includes(\"type\")) return pageModule as ResolvePageResult;\n  return {\n    type: \"error\",\n    error: new Error(\n      `Could not find Page export \"${exportName}\" in \"${path}\". ${\n        typeof pageModule === \"object\" && pageModule != null\n          ? keys.length\n            ? \"Available exports: \" + keys.join(\", \")\n            : \"The object was defined but has no properties.\"\n          : \"typeof pageModule =\" + typeof pageModule\n      }`,\n      { cause: pageModule }\n    ),\n  };\n}\n"]}