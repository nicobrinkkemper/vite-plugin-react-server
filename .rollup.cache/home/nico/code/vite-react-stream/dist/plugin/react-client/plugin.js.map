{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../../plugin/react-client/plugin.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,iBAAiB,EAAE,MAAM,+BAA+B,CAAC;AAClE,OAAO,EACL,cAAc,EACd,YAAY,EACZ,iBAAiB,GAClB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAC;AACjC,OAAO,EAAE,GAAG,EAAE,MAAM,WAAW,CAAC;AAChC,OAAO,EAAE,eAAe,EAAE,MAAM,uBAAuB,CAAC;AAExD,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;AACzB,IAAI,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,CAAA;AAC1E,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,0BAA0B,CAAC,CAAA;AAE3D,MAAM,UAAU,iBAAiB,CAC/B,OAA4B;IAE5B,MAAM,eAAe,GAAG,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAChE,IAAI,eAAe,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;QACrC,MAAM,eAAe,CAAC,KAAK,CAAC;IAC9B,CAAC;IACD,MAAM,EAAE,WAAW,EAAE,GAAG,eAAe,CAAC;IAExC,OAAO;QACL,IAAI,EAAE,mBAAmB;QACzB,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS;YAC5B,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC;YACpC,MAAM,aAAa,GAAG,MAAM,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YAClE,IAAI,aAAa,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;gBACnC,MAAM,aAAa,CAAC,KAAK,CAAC;YAC5B,CAAC;YACD,MAAM,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC;YAChC,MAAM,KAAK,GAAG,MAAM,eAAe,CAAC,KAAK,EAAE;gBACzC,IAAI,EAAE,WAAW,CAAC,IAAI;gBACtB,KAAK,EAAE,WAAW,CAAC,KAAK;aACzB,EAAE,WAAW,CAAC,WAAW,CAAC,CAAC;YAC5B,MAAM,cAAc,GAAG,iBAAiB,CAAC,cAAc,EAAE,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YACzF,IAAI,cAAc,CAAC,IAAI,KAAK,OAAO,EAAE,CAAC;gBACpC,MAAM,cAAc,CAAC,KAAK,CAAC;YAC7B,CAAC;YACD,MAAM,EAAE,UAAU,EAAE,GAAG,cAAc,CAAC;YACtC,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAC,EAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,aAAa,EAAC,CAAC,CAAA;YAC/E,OAAO,iBAAiB,CAAC;gBACvB,SAAS,EAAE,cAAc;gBACzB,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK;gBAC3C,WAAW;gBACX,UAAU;gBACV,oBAAoB,EAAE,WAAW,CAAC,oBAAoB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,oBAAoB,IAAI,IAAI,EAAE,OAAO,CAAC;gBACpK,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,OAAO,CAAC,GAAG,EAAE;gBAClC,QAAQ;gBACR,UAAU;gBACV,UAAU,EAAE,WAAW,CAAC,UAAU;gBAClC,mBAAmB,EAAE,IAAI,OAAO,EAAE;aACnC,CAAC,CAAA;QACJ,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["import type { Plugin } from \"vite\";\nimport { createBuildConfig } from \"../build/createBuildConfig.js\";\nimport {\n  resolveOptions,\n  resolvePages,\n  resolveUserConfig,\n} from \"../options.js\";\nimport type { StreamPluginOptions } from \"../types.js\";\nimport { join } from \"node:path\";\nimport { sep } from \"node:path\";\nimport { checkFilesExist } from \"../checkFilesExist.js\";\n\nlet root = process.cwd();\nlet nodeRoot = process['env']['module_root'] ?? join(root, \"node_modules\")\nlet pluginRoot = join(nodeRoot, \"vite-plugin-react-server\")\n\nexport function reactStreamPlugin(\n  options: StreamPluginOptions\n): Plugin {\n  const resolvedOptions = resolveOptions(options, \"react-client\");\n  if (resolvedOptions.type === \"error\") {\n    throw resolvedOptions.error;\n  }\n  const { userOptions } = resolvedOptions;\n\n  return {\n    name: \"vite:react-stream\",\n    async config(config, configEnv) {\n      root = config.root ?? process.cwd();\n      const resolvedPages = await resolvePages(userOptions.build.pages);\n      if (resolvedPages.type === \"error\") {\n        throw resolvedPages.error;\n      }\n      const { pages } = resolvedPages;\n      const files = await checkFilesExist(pages, {\n        Page: userOptions.Page,\n        props: userOptions.props,\n      }, userOptions.projectRoot); \n      const resolvedConfig = resolveUserConfig(\"react-client\", config, configEnv, userOptions);\n      if (resolvedConfig.type === \"error\") {\n        throw resolvedConfig.error;\n      }\n      const { userConfig } = resolvedConfig;\n      console.log('RETURNING CLIENT CONFIG',{rollup: userConfig.build.rollupOptions})\n      return createBuildConfig({\n        condition: 'react-client',\n        input: userConfig.build.rollupOptions.input,\n        userOptions,\n        userConfig,\n        moduleBaseExceptions: userOptions.moduleBaseExceptions.includes('index') ? userOptions.moduleBaseExceptions : [...userOptions.moduleBaseExceptions ?? null, 'index'],\n        root: config.root ?? process.cwd(),\n        nodeRoot,\n        pluginRoot,\n        moduleBase: userOptions.moduleBase,\n        temporaryReferences: new WeakMap(),\n      })\n    },\n  };\n}\n"]}