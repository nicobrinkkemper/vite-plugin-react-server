{"version":3,"file":"createSsrHandler.js","sourceRoot":"","sources":["../../../plugin/react-server/createSsrHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { dirname, join, resolve } from \"node:path\";\nimport { Writable } from \"node:stream\";\nimport { fileURLToPath } from \"node:url\";\nimport { Worker } from \"node:worker_threads\";\nimport { type ViteDevServer } from \"vite\";\nimport { DEFAULT_CONFIG } from \"../options.js\";\nimport type { RequestHandler, StreamPluginOptions } from \"../types.js\";\nimport type { WorkerRscChunkMessage } from \"../worker/types.js\";\nimport { createHandler } from \"./createHandler.js\";\n\nconst __dirname = dirname(fileURLToPath(import.meta.url));\n\nexport function createSsrHandler(\n  options: Required<\n    Pick<\n      StreamPluginOptions,\n      \"Page\" | \"props\" | \"build\" | \"Html\" | \"pageExportName\" | \"propsExportName\"\n    >\n  > &\n    Required<\n      Pick<\n        StreamPluginOptions,\n        \"moduleBase\" | \"moduleBasePath\" | \"moduleBaseURL\" | \"projectRoot\"\n      >\n    > &\n    Pick<StreamPluginOptions, \"workerPath\">,\n  server: ViteDevServer,\n  clientComponents: Map<string, string>\n): RequestHandler {\n  const worker = new Worker(\n    options?.workerPath\n      ? resolve(server.config.root, options?.workerPath)\n      : DEFAULT_CONFIG.WORKER_PATH,\n    {\n      env: {\n        NODE_OPTIONS: \"--conditions ''\",\n        VITE_LOADER_PATH: resolve(\n          server.config.cacheDir,\n          \"react-stream/worker/loader.js\"\n        ),\n      },\n    }\n  );\n\n  return async function handleSsrRequest(req, res, next) {\n    if (\n      !req.url ||\n      req.url.startsWith(\"/@\") ||\n      (req.url.includes(\".\") && !req.url.endsWith(\".html\"))\n    ) {\n      return next();\n    }\n\n    try {\n      const result = await createHandler(\n        req.url ?? \"\",\n        {\n          Page: options.Page,\n          props: options.props,\n          build: options.build,\n          Html: options.Html,\n          pageExportName: options.pageExportName,\n          propsExportName: options.propsExportName,\n          moduleBase: options.moduleBase,\n          moduleBasePath: options.moduleBasePath,\n          projectRoot: server.config.root,\n        },\n        {\n          loader: server.ssrLoadModule.bind(server),\n          moduleGraph: server.moduleGraph,\n        }\n      );\n      const moduleBasePath = join(\n        server.config.cacheDir,\n        options.moduleBasePath\n      );\n      const htmlOutputPath = join(\n        server.config.cacheDir,\n        server.config.build.outDir,\n        req.url,\n        \"index.html\"\n      );\n      if (result.type !== \"success\") {\n        throw new Error(\n          result.type === \"error\" ? String(result.error) : \"Skipped\"\n        );\n      }\n\n      // Collect RSC stream data\n      const rscData = await new Promise<string>((resolve, reject) => {\n        let data = \"\";\n        if (!result.stream) {\n          resolve(data);\n          return;\n        }\n        const writable = new Writable({\n          write(chunk, _, callback) {\n            data += chunk;\n            callback();\n          },\n          final(callback) {\n            resolve(data);\n            callback();\n          },\n        });\n\n        result.stream.pipe(writable);\n        writable.on(\"error\", reject);\n      });\n\n      // Get HTML from worker\n      const html = await new Promise<string>((resolve, reject) => {\n        worker.postMessage({\n          type: \"RSC_CHUNK\",\n          id: req.url ?? \"/\",\n          chunk: rscData,\n          moduleBasePath,\n          moduleBaseURL: options.moduleBaseURL,\n          // Don't need file paths in dev mode\n          outDir: \"\",\n          htmlOutputPath: \"\",\n          pipableStreamOptions: {\n            bootstrapModules: [\"/dist/client.js\"],\n          },\n        } satisfies WorkerRscChunkMessage);\n\n        worker.once(\"message\", (msg) => {\n          if (msg.type === \"ERROR\") {\n            const message =\n              msg.error instanceof Error\n                ? msg.error.message\n                : String(msg.error);\n            reject(new Error(message, { cause: msg }));\n          } else if (msg.type === \"HTML\") {\n            // In dev, content will be the HTML string\n            resolve(msg.content);\n          }\n        });\n      });\n\n      res.setHeader(\"Content-Type\", \"text/html\");\n      res.end(html);\n    } catch (error) {\n      next(error);\n    }\n  };\n}\n"]}