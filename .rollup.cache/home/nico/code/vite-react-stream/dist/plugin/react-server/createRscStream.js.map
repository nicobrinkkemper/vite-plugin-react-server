{"version":3,"file":"createRscStream.js","sourceRoot":"","sources":["../../../plugin/react-server/createRscStream.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EACL,sBAAsB;AAEtB,aAAa;EACd,MAAM,kCAAkC,CAAC;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAGhD,MAAM,UAAU,eAAe,CAC7B,aAA+B;IAE/B,MAAM,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,MAAM,EACN,QAAQ,EACR,KAAK,EACL,GAAG,EACH,cAAc,EACd,oBAAoB,GACrB,GAAG,aAAa,CAAC;IAClB,MAAM,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,CAC1B,KAAK,CAAC,aAAa,CAAC,YAAY,EAAE;YAChC,GAAG,EAAE,OAAO,KAAK,EAAE;YACnB,GAAG,EAAE,GAAG;SACT,CAAC,CACH;QACH,CAAC,CAAC,EAAE,CAAC;IACP,OAAO,sBAAsB,CAC3B,KAAK,CAAC,aAAa,CACjB,IAAI,EACJ;QACE,GAAG,EAAE,MAAM;QACX,SAAS,EAAE,KAAK;QAChB,cAAc,EAAE,cAAc;QAC9B,KAAK;QACL,GAAG;KACJ,EACD,KAAK,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK,EAAE,CAAC,EACpD,GAAG,GAAG,CACP,EACD,cAAc,EACd;QACE,OAAO,EAAE,MAAM,EAAE,KAAK,IAAI,OAAO,CAAC,KAAK;QACvC,UAAU,EAAE,MAAM,EAAE,IAAI,IAAI,OAAO,CAAC,IAAI;QACxC,eAAe,EAAE,QAAQ;QACzB,GAAG,oBAAoB;KACxB,CACF,CAAC;AACJ,CAAC","sourcesContent":["import React from \"react\";\nimport {\n  renderToPipeableStream,\n  type PipeableStream,\n  // @ts-ignore\n} from \"react-server-dom-esm/server.node\";\nimport { CssCollector } from \"../components.js\";\nimport type { RscStreamOptions } from \"../types.js\";\n\nexport function createRscStream(\n  streamOptions: RscStreamOptions\n): PipeableStream {\n  const {\n    Html,\n    Page,\n    props,\n    logger,\n    cssFiles,\n    route,\n    url,\n    moduleBasePath,\n    pipableStreamOptions,\n  } = streamOptions;\n  const css = Array.isArray(cssFiles)\n    ? cssFiles.map((css, index) =>\n        React.createElement(CssCollector, {\n          key: `css-${index}`,\n          url: css,\n        })\n      )\n    : [];\n  return renderToPipeableStream(\n    React.createElement(\n      Html,\n      {\n        key: \"html\",\n        pageProps: props,\n        moduleBasePath: moduleBasePath,\n        route,\n        url,\n      },\n      React.createElement(Page, { key: \"page\", ...props }),\n      ...css\n    ),\n    moduleBasePath,\n    {\n      onError: logger?.error ?? console.error,\n      onPostpone: logger?.info ?? console.info,\n      environmentName: \"Server\",\n      ...pipableStreamOptions,\n    }\n  );\n}\n"]}