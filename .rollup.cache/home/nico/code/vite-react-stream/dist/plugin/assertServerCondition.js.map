{"version":3,"file":"assertServerCondition.js","sourceRoot":"","sources":["../../plugin/assertServerCondition.ts"],"names":[],"mappings":"AAAA,SAAS,qBAAqB,CAA2B,CAAI;IACzD,MAAM,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;IAC1C,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,8BAA8B,CAAC,EAAE,CAAC;QACtD,IAAG,CAAC,WAAW,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC;YACrC,OAAO,CAAC,IAAI,CAAC,2JAA2J,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;QAC3N,CAAC;QACD,IAAG,CAAC,WAAW,EAAE,KAAK,CAAC,cAAc,CAAC,EAAE,CAAC;YACrC,MAAM,IAAI,KAAK,CAAC,2JAA2J,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9N,CAAC;IACL,CAAC;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAAA,CAAC;AACJ,qBAAqB,CAAC,OAAO,CAAC,CAAC","sourcesContent":["function assertServerCondition<P extends typeof process>(p: P): asserts p is P & { env: { NODE_OPTIONS: string } } {\n    const nodeOptions = p.env['NODE_OPTIONS'];\n    if (!nodeOptions?.match(/--conditions[= ]react-server/)) {\n        if(!nodeOptions?.match(/--conditions/)) {\n            console.warn(`process.env['NODE_OPTIONS'] is missing \\`--conditions\\` flag, it should be like \\`--conditions=react-server\\` or \\`--conditions react-server\\`, but was ${JSON.stringify(process.env['NODE_OPTIONS'])}`);\n        }\n        if(!nodeOptions?.match(/react-server/)) {\n            throw new Error(`process.env['NODE_OPTIONS'] is missing \\`react-server\\` flag, it should be like \\`--conditions=react-server\\` or \\`--conditions react-server\\`, but was ${JSON.stringify(process.env['NODE_OPTIONS'])}`);\n        }\n    }\n    return undefined;\n  };\nassertServerCondition(process);"]}