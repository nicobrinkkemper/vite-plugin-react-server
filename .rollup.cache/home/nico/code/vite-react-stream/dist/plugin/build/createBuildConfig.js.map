{"version":3,"file":"createBuildConfig.js","sourceRoot":"","sources":["../../../plugin/build/createBuildConfig.ts"],"names":[],"mappings":"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","sourcesContent":["import type { InputOption } from \"rollup\";\nimport { createInputNormalizer } from \"../helpers/inputNormalizer.js\";\nimport type { ResolvedUserConfig, ResolvedUserOptions } from \"../types.js\";\nimport { mergeInputs } from \"./mergeInputs.js\";\nimport type { UserConfig, InlineConfig } from 'vite';\nimport type { createBuildConfigFn } from '../types.js';\n\n\ntype CreateClientBuildConfigOptions = {\n  input: Record<string, string>;\n  userConfig: ResolvedUserConfig;\n  inputNormalizer: ReturnType<typeof createInputNormalizer>;\n};\ntype CreateServerBuildConfigOptions = {\n  input: Record<string, string>;\n  userConfig: ResolvedUserConfig;\n  inputNormalizer: ReturnType<typeof createInputNormalizer>;\n};\n\nexport function createClientBuildConfig({\n  input,\n  userConfig,\n  inputNormalizer\n}: CreateClientBuildConfigOptions): UserConfig {\n  const { input: inputConfig, ...restRollupOptions } =  \n    userConfig.build.rollupOptions ?? {};\n  return {\n    ...userConfig,\n    build: {\n      ...userConfig.build,\n      rollupOptions: {\n        ...restRollupOptions,\n        input:  mergeInputs(input, inputConfig, inputNormalizer),\n      }\n    }\n  }\n}\n\nexport const createServerBuildConfig = ({\n  input,\n  userConfig,\n  inputNormalizer\n}: CreateServerBuildConfigOptions): UserConfig  => {\n  const { output, input: inputConfig, ...restRollupOptions } =  \n    userConfig.build.rollupOptions ?? {};\n  return {\n    ...userConfig,\n    build: {\n      ...userConfig.build,\n      rollupOptions: {\n        input: mergeInputs(input, inputConfig, inputNormalizer),\n        output: { \n          format: \"esm\",\n          preserveModules: true,\n          hoistTransitiveImports: false,\n          esModule: true,\n          entryFileNames: \"[name].js\",\n          chunkFileNames: \"[name].js\",\n          assetFileNames: \"[name][extname]\",\n          ...output,\n        },\n        ...restRollupOptions,\n      },\n    },\n  };\n}\n\nexport function validateModuleBase(input: InputOption, moduleBase: string, moduleBaseExceptions: string[]) {\n  for(const [key, value] of Object.entries(input)) {\n    const isException = moduleBaseExceptions.includes(key) || ['/index', 'index'].includes(key);\n    if(!key.includes('/'))\n      return;\n    if(value.startsWith('//')){\n      throw new Error(`Path shouldn't start with //`);\n    }\n    if(!key.startsWith(moduleBase) && !isException) {\n      throw new Error(`Invalid input: ${key} does not start with ${moduleBase}. If this is a valid key, add it to moduleBaseExceptions otherwise put the file in the ${moduleBase} directory. Exception: ${moduleBaseExceptions.join(', ')}`);\n    }\n    if(!value.startsWith('/'+ moduleBase)  && !isException) {\n      throw new Error(`Invalid value: ${value} does not start with ${moduleBase}. If this is a valid path, add it to moduleBaseExceptions otherwise put the file in the ${moduleBase} directory. Exception: ${moduleBaseExceptions.join(', ')}`);\n    }\n  }\n}\n\nexport const createBuildConfig: createBuildConfigFn = ({\n  condition,\n  root,\n  input,\n  userOptions,\n  userConfig,\n  moduleBaseExceptions,\n  pluginRoot,\n  nodeRoot,\n  temporaryReferences,\n  moduleBase\n}) => {\n  const inputNormalizer = createInputNormalizer({\n    condition,\n    root,\n    pluginRoot,\n    nodeRoot,\n    temporaryReferences\n  })\n  input = Object.fromEntries(\n    Object.entries(userConfig.build.rollupOptions.input).concat(\n      Object.entries(input)\n    ).map(inputNormalizer)\n  );\n  validateModuleBase(input, moduleBase, moduleBaseExceptions);\n  if(condition !== 'react-server') {\n    return createClientBuildConfig({\n      input,\n      userConfig,\n      inputNormalizer\n    });\n  }\n  return createServerBuildConfig({\n    input,\n    userConfig,\n    inputNormalizer\n  });\n}\n"]}