{"version":3,"file":"transformer.js","sourceRoot":"","sources":["../../../plugin/transformer/transformer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,YAAY,CAAC;AAGhD,MAAM,UAAU,oBAAoB,CAAC,OAA2B;IAC9D,OAAO;QACL,IAAI,EAAE,+BAA+B;QACrC,OAAO,EAAE,MAAe;QAExB,KAAK,CAAC,SAAS,CACb,IAAY,EACZ,IAAY,EACZ,EAAE,GAAG,EAA0C;YAE/C,IAAI,CAAC;gBACH,IAAI,eAAe,GAAG,IAAI,CAAC;gBAC3B,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;gBAC3D,MAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAE7C,8BAA8B;gBAC9B,OAAO,CAAC,GAAG,CAAC,6CAA6C,EAAE;oBACzD,QAAQ,EAAE,IAAI;oBACd,WAAW,EAAE,QAAQ;iBACtB,CAAC,CAAC;gBAEH,yBAAyB;gBACzB,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAC9B,IAAI,CAAC,QAAQ,CAAC,oDAAoD,CAAC,CACpE,CAAC;gBAEF,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;oBAC1B,OAAO,CAAC,IAAI,CAAC,+CAA+C,IAAI,EAAE,CAAC,CAAC;oBACpE,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,wBAAwB;gBACxB,KAAK,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,IAAI,aAAa,EAAE,CAAC;oBACpD,IAAI,CAAC,UAAU,EAAE,CAAC;wBAChB,OAAO,CAAC,IAAI,CAAC,6CAA6C,IAAI,EAAE,CAAC,CAAC;wBAClE,SAAS;oBACX,CAAC;oBAED,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;oBAE5C,wBAAwB;oBACxB,eAAe,GAAG,eAAe,CAAC,OAAO,CACvC,SAAS,EACT,SAAS,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CACjC,CAAC;oBAEF,IAAI,CAAC,cAAc,IAAI,cAAc,CAAC,KAAK,KAAK,CAAC,EAAE,CAAC;wBAClD,mBAAmB;wBACnB,eAAe,IAAI;QACvB,UAAU;IAEd,OAAO;4BACL,CAAC,CAAC,iBAAiB,UAAU;;UAEzB;4BACJ,CAAC,CAAC,8BAA8B,UAAU,uBAC9C;;;qBAGmB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,GAAG,GAAG,UAAU,CAAC;2BACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;;;WAIpC,UAAU,UAAU,UAAU;CACxC,CAAC;oBACQ,CAAC;yBAAM,CAAC;wBACN,mBAAmB;wBACnB,eAAe,IAAI;QACvB,UAAU;IAEd,OAAO;4BACL,CAAC,CAAC,iBAAiB,UAAU;;UAEzB;4BACJ,CAAC,CAAC,8BAA8B,UAAU,uBAC9C;;;qBAGmB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,GAAG,GAAG,UAAU,CAAC;2BACrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;;;WAGpC,UAAU,UAAU,UAAU;CACxC,CAAC;oBACQ,CAAC;gBACH,CAAC;gBAED,OAAO;oBACL,IAAI,EAAE,eAAe;oBACrB,GAAG,EAAE,IAAI,kBAAkB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE;iBACvD,CAAC;YACJ,CAAC;YAAC,OAAO,KAAK,EAAE,CAAC;gBACf,OAAO,CAAC,KAAK,CACX,8CAA8C,IAAI,EAAE,EACpD,KAAK,CACN,CAAC;gBACF,MAAM,KAAK,CAAC;YACd,CAAC;QACH,CAAC;KACF,CAAC;AACJ,CAAC;AAED;;;;;;;;;;;;;;;;GAgBG","sourcesContent":["import { SourceMapGenerator } from \"source-map\";\nimport type { TransformerOptions } from \"./types.js\";\n\nexport function createRscTransformer(options: TransformerOptions) {\n  return {\n    name: \"vite:react-stream-transformer\",\n    enforce: \"post\" as const,\n\n    async transform(\n      code: string,\n      path: string,\n      { ssr }: { inMap: null | string; ssr: boolean }\n    ) {\n      try {\n        let transformedCode = code;\n        const directiveMatch = code.match(/^[\"']use client[\"'];?/);\n        const moduleId = options.moduleId(path, ssr);\n\n        // Log the path transformation\n        console.log(\"[RSC Transform] Module path transformation:\", {\n          original: path,\n          transformed: moduleId,\n        });\n\n        // Find all named exports\n        const exportMatches = Array.from(\n          code.matchAll(/export\\s+(?:const|let|var|function|class)\\s+(\\w+)/g)\n        );\n\n        if (!exportMatches.length) {\n          console.warn(`[RSC] No exports found in client component: ${path}`);\n          return null;\n        }\n\n        // Transform each export\n        for (const [fullMatch, exportName] of exportMatches) {\n          if (!exportName) {\n            console.warn(`[RSC] Invalid export in client component: ${path}`);\n            continue;\n          }\n\n          const isClass = fullMatch.includes(\"class\");\n\n          // Remove export keyword\n          transformedCode = transformedCode.replace(\n            fullMatch,\n            fullMatch.replace(\"export \", \"\")\n          );\n\n          if (!directiveMatch || directiveMatch.index !== 0) {\n            // Server component\n            transformedCode += `\nconst ${exportName}Ref = Object.defineProperties(\n  ${\n    isClass\n      ? `class extends ${exportName} {\n          constructor(...args) { super(...args); }\n        }`\n      : `function(...args) { return ${exportName}.apply(null, args); }`\n  },\n  {\n    $$typeof: { value: Symbol.for(\"react.server.reference\") },\n    $$id: { value: ${JSON.stringify(moduleId + \"#\" + exportName)} },\n    $$filepath: { value: ${JSON.stringify(path)} },\n    $$async: { value: true }\n  }\n);\nexport { ${exportName}Ref as ${exportName} };\n`;\n          } else {\n            // Client component\n            transformedCode += `\nconst ${exportName}Ref = Object.defineProperties(\n  ${\n    isClass\n      ? `class extends ${exportName} {\n          constructor(...args) { super(...args); }\n        }`\n      : `function(...args) { return ${exportName}.apply(null, args); }`\n  },\n  {\n    $$typeof: { value: Symbol.for(\"react.client.reference\") },\n    $$id: { value: ${JSON.stringify(moduleId + \"#\" + exportName)} },\n    $$filepath: { value: ${JSON.stringify(path)} }\n  }\n);\nexport { ${exportName}Ref as ${exportName} };\n`;\n          }\n        }\n\n        return {\n          code: transformedCode,\n          map: new SourceMapGenerator({ file: path }).toString(),\n        };\n      } catch (error) {\n        console.error(\n          `[RSC] Error transforming client component: ${path}`,\n          error\n        );\n        throw error;\n      }\n    },\n  };\n}\n\n/**\n * transformedCode += `\nconst ${exportName}Ref = Object.defineProperties(\n  ${\n    isClass\n      ? `class extends ${exportName} {\n          constructor(...args) { super(...args); }\n        }`\n      : `function(...args) { return ${exportName}.apply(null, args); }`\n  },\n  {\n    $$typeof: { value: Symbol.for(\"react.client.reference\") },\n    $$id: { value: ${JSON.stringify(moduleId + \"#\" + exportName)} }\n  }\n);\nexport { ${exportName}Ref as ${exportName} };`;\n */\n"]}