{"version":3,"file":"tryManifest.js","sourceRoot":"","sources":["../../../plugin/helpers/tryManifest.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AASpC,MAAM,UAAU,WAAW,CAAsB,OAAgC;IAO/E,MAAM,YAAY,GAAG,OAAO,CAC1B,OAAO,CAAC,IAAI,EACZ,OAAO,CAAC,MAAM,EACd,OAAO,EACP,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,eAAe,CAC5D,CAAC;IACF,IAAI,CAAC;QACH,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;QAC/D,OAAO;YACL,IAAI,EAAE,SAAS;YACf,QAAQ,EAAE,MAAM;SACjB,CAAA;IACH,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC;QAC/C,OAAO;YACL,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,CAAU;SAClB,CAAA;IACH,CAAC;AACH,CAAC","sourcesContent":["import { readFileSync } from \"node:fs\";\nimport { resolve } from \"node:path\";\nimport type { Manifest } from \"vite\";\n\ntype TryManifestOptions<SSR extends boolean> = {\n  root: string;\n  outDir: string;\n  ssrManifest: SSR;\n};\n\nexport function tryManifest<SSR extends boolean>(options: TryManifestOptions<SSR>): {\n  type: \"success\";\n  manifest: SSR extends true ? Record<string, string[]> : Manifest;\n} | {\n  type: \"error\";\n  error: Error;\n} {\n  const manifestPath = resolve(\n    options.root,\n    options.outDir,\n    \".vite\",\n    options.ssrManifest ? \"ssr-manifest.json\" : \"manifest.json\"\n  );\n  try {\n    const result=  JSON.parse(readFileSync(manifestPath, \"utf-8\"));\n    return {\n      type: \"success\",\n      manifest: result,\n    }\n  } catch (e) {\n    console.log(\"No manifest found\", manifestPath);\n    return {\n      type: \"error\",\n      error: e as Error,\n    }\n  }\n}\n"]}