{"version":3,"file":"collect-css-manifest.js","sourceRoot":"","sources":["../../plugin/collect-css-manifest.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,KAAK,UAAU,qBAAqB,CACzC,WAAwB,EACxB,QAAgB,EAChB,KAA8B;IAE9B,IAAI,CAAC,QAAQ;QAAE,OAAO,IAAI,GAAG,EAAkB,CAAC;IAEhD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC3C,MAAM,UAAU,GAAG,MAAM,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACpE,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,OAAO,IAAI,GAAG,EAAkB,CAAC;IACnC,CAAC;IACD,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;IAC/B,MAAM,UAAU,GAAG,CAAC,GAAQ,EAAE,EAAE;QAC9B,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAAE,OAAO;QACzC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACjB,IAAI,GAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YAC9B,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAClC,CAAC;QACD,GAAG,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;IACF,UAAU,CAAC,UAAU,CAAC,CAAC;IACvB,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,MAAM,UAAU,kBAAkB,CAChC,QAAkB,EAClB,IAAY,EACZ,QAAgB,EAChB,KAA8B;IAE9B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC;QACtD,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC,QAAQ,CAAC;IACb,IAAI,CAAC,gBAAgB;QAAE,OAAO,IAAI,GAAG,EAAkB,CAAC;IACxD,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC3C,MAAM,IAAI,GAAG,IAAI,GAAG,EAAU,CAAC;IAE/B,MAAM,iBAAiB,GAAG,CAAC,EAAU,EAAE,EAAE;QACvC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YAAE,OAAO;QACzB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QACb,IAAI,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACrB,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;YACZ,OAAO;QACT,CAAC;QACD,yBAAyB;QACzB,MAAM,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK;YAAE,OAAO;QAEnB,iBAAiB;QACjB,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;YACd,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;gBAChC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAC9B,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC;QAED,2BAA2B;QAC3B,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;YAClB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;QACjE,CAAC;QAED,4BAA4B;QAC5B,IAAI,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;QACxE,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,QAAQ,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAC/B,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","sourcesContent":["import type { Manifest, ModuleGraph } from 'vite';\n\nexport async function collectModuleGraphCss(\n  moduleGraph: ModuleGraph,\n  pagePath: string,\n  onCss?: (path: string) => void\n) {\n  if (!pagePath) return new Map<string, string>();\n\n  const cssFiles = new Map<string, string>();\n  const pageModule = await moduleGraph.getModuleByUrl(pagePath, true);\n  if (!pageModule) {\n    return new Map<string, string>();\n  }\n  const seen = new Set<string>();\n  const walkModule = (mod: any) => {\n    if (!mod?.id || seen.has(mod.id)) return;\n    seen.add(mod.id);\n    if (mod?.id?.endsWith(\".css\")) {\n      cssFiles.set(mod?.url, mod?.id);\n    }\n    mod?.importedModules?.forEach((imp: any) => walkModule(imp));\n  };\n  walkModule(pageModule);\n  return cssFiles;\n}\n\nexport function collectManifestCss(\n  manifest: Manifest,\n  root: string,\n  pagePath: string,\n  onCss?: (path: string) => void\n) {\n  const relativePagePath = pagePath.startsWith(root + \"/\")\n    ? pagePath.slice(root.length + 1)\n    : pagePath;\n  if (!relativePagePath) return new Map<string, string>();\n  const cssFiles = new Map<string, string>();\n  const seen = new Set<string>();\n\n  const walkManifestEntry = (id: string) => {\n    if (seen.has(id)) return;\n    seen.add(id);\n    if (id.endsWith(\".css\")) {\n      cssFiles.set(id, id);\n      onCss?.(id);\n      return;\n    }\n    // Get the manifest entry\n    const entry = manifest[id];\n    if (!entry) return;\n\n    // Add direct CSS\n    if (entry.css) {\n      entry.css.forEach((css: string) => {\n        cssFiles.set(entry.file, css);\n        onCss?.(css);\n      });\n    }\n\n    // Walk imports recursively\n    if (entry.imports) {\n      entry.imports.forEach((imp: string) => walkManifestEntry(imp));\n    }\n\n    // Also check dynamicImports\n    if (entry.dynamicImports) {\n      entry.dynamicImports.forEach((imp: string) => walkManifestEntry(imp));\n    }\n  };\n\n  if (manifest[relativePagePath]) {\n    walkManifestEntry(relativePagePath);\n  }\n\n  return cssFiles;\n}\n"]}